
<div style="display: flex; flex-direction:column; padding:10px;">
    <h3>Settings</h3>

    <label> Seed: </label>
    <input type="text" @bind="Settings.Seed" />

    <label> Width: </label>
    <input type="number" @bind="Settings.Width" />

    <label> Height: </label>
    <input type="number" @bind="Settings.Height" />

    <label> Frequency: </label>
    <input type="number" step="0.001" @bind="Settings.Frequency" />

    <div style="background-color:lightgrey; padding:5px;">
        <button @onclick="() => Settings.ColorSelectors.Add(new ColorSelector())">Add</button>
        @foreach (var colorSelector in Settings.ColorSelectors)
        {
            <div style="border:2px solid @(colorSelector.Color.GetCssColor()); padding:5px; display:flex; flex-direction:column; margin-top:5px;">
                <label> Min Value: </label>
                <input type="number" step="0.01" @bind="colorSelector.MinValue" />

                <label> Max Value: </label>
                <input type="number" step="0.01" @bind="colorSelector.MaxValue" />

                <label> Red: </label>
                <input type="number" step="0.1" @bind="colorSelector.Color.Red" />

                <label> Green: </label>
                <input type="number" step="0.1" @bind="colorSelector.Color.Green" />

                <label> Blue: </label>
                <input type="number" step="0.1" @bind="colorSelector.Color.Blue" />

                <button @onclick="() => Settings.ColorSelectors.Remove(colorSelector)">Remove</button>
            </div>
        }
    </div>
    
    <button @onclick="Save">Save</button>
</div>


@code {

    [Parameter, EditorRequired]
    public GenerationSettings Settings { get; set; }

    [Parameter, EditorRequired]
    public Action<GenerationSettings> OnSettingsUpdated { get; set; }

    private void Save()
    {
        OnSettingsUpdated(Settings);
    }
}
