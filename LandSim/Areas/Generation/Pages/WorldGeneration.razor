@page "/generation"
@using LandSim.Areas.Generation.Components
@using LandSim.Areas.Generation.Database;
@using LandSim.Areas.Generation.Models;
@using LandSim.Areas.Generation.Services;
@using LandSim.Areas.Map.Components
@using LandSim.Areas.Map.Models;
@using LandSim.Database;

<PageTitle>World Generation</PageTitle>

<GridRow Style="height:100%;">
    <GridCol Style="padding: 5px; flex: none; height: 100%; overflow:scroll">
        <GenerationSettingsMenu Settings="settings" OnSettingsUpdated="UpdateSettings" OnGeneratedTerrainApplied="SaveGeneratedTerrain" />
    </GridCol>
    <GridCol Flex=@("auto")>
        <div style="flex-grow:1; height:100%; position:relative; padding:5px;">
            <div style="height:100%; width:100%; position:relative;">
                <div style="position:absolute; top:0px; bottom:0px; left:0px; right:0px; overflow:scroll;">
                    <MapGrid Terrain="terrain" />
                </div>
            </div>
        </div>
    </GridCol>
</GridRow>


@code {
    //TODO <GridCol Flex=@("none")  Style="padding: 5px;"> has a bug! Make a PR to fix this

    [Inject]
    public MapRepository MapRepository { get; set; } = null!;

    [Inject]
    public GenerationSettingsRepository GenerationSettingsRepository { get; set; } = null!;

    [Inject]
    public TerrainGenerationService TerrainService { get; set; } = null!;

    private TerrainTile[,] terrain = null!;

    private GenerationSettings settings = null!;

    protected override void OnInitialized()
    {
        settings = GenerationSettingsRepository.GetSettings();
        terrain = TerrainService.GenerateTerrain(settings);
    }

    private void UpdateSettings(GenerationSettings settings)
    {
        this.settings = settings;
            terrain = TerrainService.GenerateTerrain(this.settings);

        var width = terrain.GetLength(0);
        var height = terrain.GetLength(1);

        GenerationSettingsRepository.SaveSettings(settings);
        StateHasChanged();
    }
    
    private async Task SaveGeneratedTerrain()
    {
        await MapRepository.ReplaceTerrain(terrain);
    }
}
